@import "_var";

// @example
// @include display-flex(center,center,row);

@mixin display-flex($align,  $justify, $direction) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
}

@mixin grid($max-width: 1600px, $padding: 0 0, $margin: 0 auto) {
  margin: $margin;
  max-width: $max-width;
  padding: $padding;
  width: 100%;
}

//  Define posicionamento absoluto.
//  @mixin Position Absolute
//  @example
//  @include abs-position(100px, 100px, auto, auto);
@mixin abs-position($top, $right, $bottom, $left) {
  margin: auto;
  position: absolute;
  bottom: $bottom;
  left: $left;
  right: $right;
  top: $top;
}

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type ==max {
      $width: $width - 1px;
    }

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

//  @mixin Fonte Padr√£o simplificada
//  @example
//  @include text("m");
@mixin text($size: 'm', $weight: $fontRegular) {
  font-style: normal;
  font-weight: $weight;
  font-family: $primaryFont;

  @if $size == 'ppp' {
    font-size: 10px;
    line-height: 10px;

    @include mq('768') {
      font-size: 12px;
      line-height: 16px;
    }
  }

  @if $size == 'pp' {
    font-size: 12px;
    line-height: 16px;

    @include mq('768') {
      font-size: 14px;
      line-height: 20px;
    }
  }

  @if $size == 'p' {
    font-size: 12px;
    line-height: 16px;
  }



  @if $size == 'm' {
    font-size: 14px;
    line-height: 20px;
  }
  
  @if $size == 'mm' {
    font-size: 14px;
    line-height: 20px;

    @include mq('768') {
      font-size: 16px;
      line-height: 24px;
    }
  }

  @if $size == 'g' {
    font-size: 16px;
    line-height: 24px;
  }

  @if $size == 'gg' {
    font-size: 16px;
    line-height: 24px;

    @include mq('768') {
      font-size: 24px;
      line-height: 26px;
    }
  }

  @if $size == 'gl' {
    font-size: 20px;
    line-height: 24px;
  }

  @if $size == 'xxg' {
    font-size: 24px;
    line-height: 24px;
  }

  @if $size == 'xg' {
    font-size: 24px;
    line-height: 24px;

    @include mq('768') {
      font-size: 32px;
      line-height: 26px;
    }
  }
  @if $size == 'xxl' {
    font-size: 30px;
    line-height: 24px;

    @include mq('768') {
      font-size: 40px;
      line-height: 26px;
    }
  }
}


@mixin size($width, $height: $width) {
  @if _is-size($height) {
    height: $height;
  } @else {
    @error '`#{$height}` is not a valid length for the `$height` argument '+'in the `size` mixin.';
  }

  @if _is-size($width) {
    width: $width;
  } @else {
    @error '`#{$width}` is not a valid length for the `$width` argument '+'in the `size` mixin.';
  }
}



$breakpoints: (
  '360': 360px,
  '375': 375px,
  '390': 390px,
  '400': 400px,
  '414': 414px,
  '428': 428px,
  '450': 450px,
  '480': 480px,
  '500': 500px,
  '590': 590px,
  '640': 640px,
  '720': 720px,
  '768': 768px,
  '992': 992px,
  '1000': 1000px,
  '1024': 1024px,
  '1025': 1025px,
  '1026': 1026px,
  '1100': 1110px,
  '1200': 1200px,
  '1252': 1252px,
  '1270': 1270px,
  '1290': 1290px,
  '1300': 1300px,
  '1350': 1350px,
  '1440': 1440px,
  '1500': 1500px,
  '1560': 1560px,
  '1800': 1800px,
);